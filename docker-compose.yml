version: '3.9'
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  default:
    name: opentelemetry
    driver: bridge

services:
  ########################
  # Telemetry Components #
  ########################
  ##
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.42
    container_name: jaeger
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://prometheus:9090"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "16686:16686"			# Jaeger UI
      - "4317:4317"			# OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
    logging: *logging

  # Grafana
  grafana:
    image: grafana/grafana:9.4.3
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 75M
    volumes:
      - ./etc/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./etc/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3001:3000"
    logging: *logging

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.73.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    volumes:
      - ./etc/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      - ./etc/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "44317:4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      - jaeger
    logging: *logging

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./etc/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "9091:9090"
    logging: *logging

  # Loki
  loki:
    image: grafana/loki:2.7.4
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./etc/loki/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:2.7.4
    container_name: promtail
#  volumes:
#    - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

